<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UML on Michele Schimd</title><link>https://profschimd.github.io/materie/tpsit/4/03-uml/</link><description>Recent content in UML on Michele Schimd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://profschimd.github.io/materie/tpsit/4/03-uml/index.xml" rel="self" type="application/rss+xml"/><item><title>Analisi dei Requisiti software</title><link>https://profschimd.github.io/materie/tpsit/4/03-uml/00-requisiti/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/03-uml/00-requisiti/</guid><description>Requisiti di un software Nella progettazione di un software uno degli obiettivi è, ovviamente, quello di soddisfare l&amp;rsquo;utente finale. Cosa significa &amp;ldquo;soddisfare&amp;rdquo; in questo caso? A questa domanda non può esistere un&amp;rsquo;unica risposta in quanto la soddisfazione dipende da quello che l&amp;rsquo;utente si aspetta. Quello che l&amp;rsquo;utente si aspetta dipende da quali sono le sue esigenze (rispetto al software). Quindi, nel progettare un software è fondamentale conoscere le esigenze del cliente che verranno poi tradotte in requisiti del software stesso.</description></item><item><title>Diagramma della classi UML</title><link>https://profschimd.github.io/materie/tpsit/4/03-uml/01-uml-classi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/03-uml/01-uml-classi/</guid><description>Cose&amp;rsquo;è il diagramma delle classi Il diagramma delle classi UML serve a descrivere le classi di un progetto e la relazione tra di esse (es. ereditarietà). Il diagramma delle classi risulta molto comodo quando il progetto contiene molte (10 o più) classi per cui il codice è costituito da centinaia di righe. In questo caso avere un diagramma delle classi. Il diagramma delle classi contiene tutte le informazioni riguardanti gli attributi (public, private e protected) e tutti i metodi (public private e protected) di una classe.</description></item><item><title>Diagrammi dei casi d'uso UML</title><link>https://profschimd.github.io/materie/tpsit/4/03-uml/02-use-case/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/03-uml/02-use-case/</guid><description>In questa pagina viene brevemente discussa la problematica della raccolta e analisi dei requisiti di un software. Affinché tale operazione risulti pienamente efficace, si deve procedere alla documentazione di tali requisiti. In questo pagina discutiamo ciò che lo standard UML mette a disposizione a questo scopo: i diagrammi dei casi d&amp;rsquo;uso (use-case diagram).
Come tutti i diagrammi UML, anche i diagrammi dei casi d&amp;rsquo;uso sono rappresentazioni grafiche che seguono specifiche regole.</description></item></channel></rss>