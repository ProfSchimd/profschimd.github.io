<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Multi threading in Java on Michele Schimd</title><link>https://profschimd.github.io/materie/tpsit/4/05-multi-threading/</link><description>Recent content in Multi threading in Java on Michele Schimd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://profschimd.github.io/materie/tpsit/4/05-multi-threading/index.xml" rel="self" type="application/rss+xml"/><item><title>Socket e multi-threading</title><link>https://profschimd.github.io/materie/tpsit/4/05-multi-threading/multi-thread-socket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/05-multi-threading/multi-thread-socket/</guid><description>Un utilizzo frequente dei thread è in combinazione con i socket. Si pensi ad un Web Server che riceve migliaia o più di richieste di connessioni in contemporanea. Come è possibile gestire tutte queste richieste in modo veloce?
Una possibilità è che il server utilizzi più thread per gestire le varie connessioni. Bisogna però stare attenti che l&amp;rsquo;utilizzo di troppi thread può sovraccaricare il server ottenendo l&amp;rsquo;effetto opposto a quello desiderato.</description></item><item><title>Programmazione asincrona</title><link>https://profschimd.github.io/materie/tpsit/4/05-multi-threading/programmazione_asincrona/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/05-multi-threading/programmazione_asincrona/</guid><description>Programmazione sequenziale Normalmente siamo abituati a pensare ad un programma come ad una sequenza di istruzione, questo è in effetti quello che accade all&amp;rsquo;interno di un core della CPU che esegue continuamente il ciclo di fetch-and-execute. Per questo motivo si parla anche di programmazione sequenziale nel qual caso il compito del programmatore è trovare la giusta sequenza di istruzione (siano esse istruzioni Java, C++, assembly, &amp;hellip;).
Tuttavia, se si pensa a come oggi usiamo i nostri dispositivi (smartphone, laptop, PC, &amp;hellip;), ci si accorge subito che non si tratta di un un &amp;ldquo;uso sequenziale&amp;rdquo;.</description></item></channel></rss>