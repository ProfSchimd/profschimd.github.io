<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Service on Michele Schimd</title><link>https://profschimd.github.io/materie/tpsit/5/05-web-service/</link><description>Recent content in Web Service on Michele Schimd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://profschimd.github.io/materie/tpsit/5/05-web-service/index.xml" rel="self" type="application/rss+xml"/><item><title>Concetti base sui Web service</title><link>https://profschimd.github.io/materie/tpsit/5/05-web-service/01-web-service-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/5/05-web-service/01-web-service-intro/</guid><description>Introduzione ai Web Service Un Web Service è un metodo di comunicazione tra applicazioni distribuite su diverse piattaforme e sistemi operativi tramite il protocollo HTTP (Hypertext Transfer Protocol). Questo metodo è stato introdotto per superare le limitazioni dei tradizionali metodi di comunicazione, come i file di scambio e i messaggi in formato testo, che spesso non permettono una comunicazione efficiente e sicura tra applicazioni.
Definizione Un Web Service è un sistema software che permette a diverse applicazioni di comunicare tra loro e scambiarsi informazioni in rete, solitamente utilizzando protocolli standard, tipicamente HTTP, basati su XML o JSON.</description></item><item><title>Implementazione di Web Service REST</title><link>https://profschimd.github.io/materie/tpsit/5/05-web-service/02-realizzazione-web-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/5/05-web-service/02-realizzazione-web-service/</guid><description>Definizione delle risorse Il primo passo nella creazione di un web service è la definizione dei contenuti, le risorse che il servizio fornirà ai suoi utenti. Questo aspetto caratterizza il web service, ad esempio un servizio per fornire testo sarà diverso da un servizio per fornire immagini o video.
Ricordiamo che lo scambio di risorse avviene, tipicamente, utilizzando formati standard quali XML e JSON. Inoltre per servizi REST, le risorse vengono identificate mediante URL.</description></item><item><title>Sicurezza nei Web Service</title><link>https://profschimd.github.io/materie/tpsit/5/05-web-service/03-web-service-sicurezza/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/5/05-web-service/03-web-service-sicurezza/</guid><description>Sicurezza dei Web Service Autenticazione e autorizzazione Protezione dei dati Meccanismi di sicurezza</description></item><item><title>Laboratorio 1: Client REST</title><link>https://profschimd.github.io/materie/tpsit/5/05-web-service/l01-web-service-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/5/05-web-service/l01-web-service-client/</guid><description>Web service pubblici Random user REST Countries News API (necessita API Key) Lista di API</description></item><item><title>Laboratorio 2: Server REST</title><link>https://profschimd.github.io/materie/tpsit/5/05-web-service/l02-web-service-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/5/05-web-service/l02-web-service-server/</guid><description>Web Service in Javascript con NodeJS Web Service in Python con Flask Web Service in Dart Un modo veloce per creare web service in Dart è utilizzando il pacchetto shelf che può essere incluso aggiungendolo al pubspec.yaml:
dev_dependencies: shelf: ^1.1.0 Una volta incluso shelf, per creare un web server sono sufficiente due semplici passi:
definire una funzione handler che riceve richieste ed elabora le risposte, avviare un&amp;rsquo;istanza del server agganciata all&amp;rsquo;handler creato.</description></item></channel></rss>