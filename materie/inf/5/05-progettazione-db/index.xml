<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Progettazione di basi di dati on Michele Schimd</title><link>https://profschimd.github.io/materie/inf/5/05-progettazione-db/</link><description>Recent content in Progettazione di basi di dati on Michele Schimd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://profschimd.github.io/materie/inf/5/05-progettazione-db/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduzione alla progettazione di basi di dati</title><link>https://profschimd.github.io/materie/inf/5/05-progettazione-db/00-intro-progettazione/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/05-progettazione-db/00-intro-progettazione/</guid><description>Il primo passo per la creazione di una base di dati è la sua progettazione. Questa lezione discute le motivazioni e gli obiettivi della progettazione introducendo i tre livelli di progettazione: concettuale, logica e fisica.</description></item><item><title>Diagramma ER: Molteplicità e vincoli</title><link>https://profschimd.github.io/materie/inf/5/05-progettazione-db/03-er-molteplicita/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/05-progettazione-db/03-er-molteplicita/</guid><description>Molteplicità Vincoli di partecipazione Certe entità possono esistere unicamente in virtù della loro partecipazione ad una relazione, ad esempio uno Studente deve essere Iscritto ad una Classe perché possa essere presente nel database della scuola.
In generale è importante sapere il numero minimo di relazioni a cui un entità deve partecipare, nell&amp;rsquo;esempio questo numero minimo è 1, cioè ogni studente deve appartenere ad almeno una classe, come abbiamo visto sopra, in questo esempio anche il numero massimo è uno, cioè uno studente non può essere iscritto a più classi contemporaneamente.</description></item><item><title>Progettazione logica e traduzione ER</title><link>https://profschimd.github.io/materie/inf/5/05-progettazione-db/04-progettazione-logica/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/05-progettazione-db/04-progettazione-logica/</guid><description>La progettazione concettuale permette la formalizzazione della realtà, ma non è immediatamente traducibile in un database. Nella progettazione logica si descrive la realtà usando costrutti del modello di basi di dati in utilizzo, in questa lezione il modello relazionale. Quindi la progettazione logica prevede la definizione di tabelle tipicamente partendo da uno schema ER prodotto nella progettazione concettuale. In questa lezione viene presentata questa fase della progettazione di un database.</description></item><item><title/><link>https://profschimd.github.io/materie/inf/5/05-progettazione-db/01-er-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/05-progettazione-db/01-er-intro/</guid><description/></item><item><title/><link>https://profschimd.github.io/materie/inf/5/05-progettazione-db/05-normalizzazione/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/05-progettazione-db/05-normalizzazione/</guid><description/></item></channel></rss>