<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Michele Schimd</title><link>https://profschimd.github.io/</link><description>Recent content on Michele Schimd</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://profschimd.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Informazione e dati</title><link>https://profschimd.github.io/materie/inf/5/01-gestione-dati/01-informazione-dati/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/01-gestione-dati/01-informazione-dati/</guid><description>In questa lezione capiremo cosa sono i dati e cosa si intende per informazione. Questo aspetto va necessariamente approfondito per gestire al meglio i dati in modo da mantenere l&amp;rsquo;informazione che è di interesse.</description></item><item><title>Programmare</title><link>https://profschimd.github.io/materie/inf/3/01-programmazione/00-programmare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/3/01-programmazione/00-programmare/</guid><description>Cosa vuol dire programmare</description></item><item><title>Sistema di elaborazione</title><link>https://profschimd.github.io/materie/sr/3/01/sistema_elaborazione/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/3/01/sistema_elaborazione/</guid><description>I sistemi di elaborazione sono quei dispositivi che sono in grado di elaborare dati. Spesso questi possono essere programmati per fare delle specifiche elaborazioni.</description></item><item><title>Rappresentazione dei dati</title><link>https://profschimd.github.io/materie/inf/5/01-gestione-dati/02-rappresentazione/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/01-gestione-dati/02-rappresentazione/</guid><description>Rappresentare l&amp;rsquo;informazione Nella lezione Informazione e Dati viene brevemente trattata la problematica di rappresentare vari tipi di informazione (immagini, suoni, video, &amp;hellip;) in bit di modo che essa possa essere manipolata dai calcolatori moderni.
Tipi e domini Rappresentazione intensionale ed estensionale Vincoli</description></item><item><title>Manipolare i dati</title><link>https://profschimd.github.io/materie/inf/5/01-gestione-dati/03-manipolazione/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/01-gestione-dati/03-manipolazione/</guid><description>Manipolare i dati Inserzioni Modifica Cancellazione Replicazione e Consistenza</description></item><item><title>Istruzioni</title><link>https://profschimd.github.io/materie/inf/3/01-programmazione/01-istruzioni/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/3/01-programmazione/01-istruzioni/</guid><description/></item><item><title>La comunicazione</title><link>https://profschimd.github.io/materie/sr/4/01-base-reti/comunicazione/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/01-base-reti/comunicazione/</guid><description>Per capire bene come funziona una rete, bisogna prima capire a cosa serve una rete.
Nell&amp;rsquo;esempio di comunicazione rappresentato nella figura di sinistra, ci sono due persone che vogliono scambiarsi dell&amp;rsquo;informazione. Alice vuole che Bob le mandi l&amp;rsquo;ultimo versione del documento su cui lui sta lavorando. Bob è in smart working per la pandemia e manderà ad Alice una copia elettronica del documento richiesto. Notiamo che quando Alice chiede via email il documento a Bob, Alice spedisce e Bob riceve.</description></item><item><title>Mezzi fisici</title><link>https://profschimd.github.io/materie/sr/4/02-physical/mezzi-fisici/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/02-physical/mezzi-fisici/</guid><description>Descrizione dei principali mezzi fisici utilizzati oggi e confronto tra di essi.</description></item><item><title>Random Access Memory (RAM)</title><link>https://profschimd.github.io/materie/sr/3/01/ram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/3/01/ram/</guid><description>La RAM è una della memoria di un sistema di elaborazione, il suo funzionamento è strettamente collegato al funzionamento della CPU e per questo va compreso a fondo.</description></item><item><title>Ruoli del livello di collegamento</title><link>https://profschimd.github.io/materie/sr/4/03-datalink/collegamento/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/03-datalink/collegamento/</guid><description>Ruolo del livello di collegamento Il livello di collegamento** (data link) rappresenta il secondo livello dell&amp;rsquo;architettura ISO/OSI mentre è parte del livello di &amp;ldquo;Accesso alla Rete&amp;rdquo; nell&amp;rsquo;architettura TCP/IP di Internet. Trovandosi tra il livello di accesso al mezzo fisico ed il livello di rete, il ruolo del livello data link è di fornire un&amp;rsquo;astrazione del mezzo fisico utilizzato e della topologia della rete. In pratica i protocolli del livello di rete (ad esempio IPv4 e IPv6) devono essere &amp;ldquo;indifferenti&amp;rdquo; al tipo di mezzo fisico (es.</description></item><item><title>Sincronizzazione</title><link>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/sincronizzazione/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/sincronizzazione/</guid><description>Cos&amp;rsquo;è la sincronizzazione Vari tipi di problemi hanno soluzioni le cui operazioni devono essere fatte in un ordine ben preciso. Ad esempio, quando si cucina una pizza, si deve aspettare che il forno sia caldo prima che si possa inserire la pizza cruda. Inoltre, gli ingredienti devono essere messi prima di infornare la pizza altrimenti questi non si cuociono.
Anche nei problemi informatici è spesso necessario che le operazioni si svolgano in una sequenza ben precisa, questa sequenza di operazione prende il nome di algoritmo.</description></item><item><title>Architettura a strati per le reti</title><link>https://profschimd.github.io/materie/sr/4/01-base-reti/architettura-rete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/01-base-reti/architettura-rete/</guid><description>Modelli a strati Una rete come Internet è un artificio umano estremamente complesso. Si stima che ci siano più di 20 miliardi di dispositivi connessi alla rete (quanti dei vostri dispositivi - PC, smartphone, PS5, &amp;hellip; - sono connessi ad Internet?).
Rifletti Quanti e quali dispositivi sono connessi? Scrivi una risposta e solo dopo clicca qui e rifletti sulla tua risposta. Aggiungeresti qualcosa alla lista dei tuoi dispositivi connessi?
Per gestire un sistema così complesso le reti moderne come Internet sono costruite basandosi su architetture a strati (layered architecture).</description></item><item><title>Central Processing Unit (CPU)</title><link>https://profschimd.github.io/materie/sr/3/01/cpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/3/01/cpu/</guid><description>La CPU è il centro operativo di un sistema di elaborazione dati, essa permette di fare operazioni semplici, ma in modo veloce. Capire come funziona la CPU è fondamentale per scrivere programmi che siano efficienti.</description></item><item><title>Codifica</title><link>https://profschimd.github.io/materie/sr/4/02-physical/codifica/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/02-physical/codifica/</guid><description>Avendo stabilito il mezzo di comunicazione è necessario che i dispositivi di trasmissione e ricezione si &amp;ldquo;accordino&amp;rdquo; su come misurare l&amp;rsquo;informazione (i bit) sul mezzo di trasmissione. Ad esempio, se sul cavo di rame si pattuisce che una tensione di +5V indichi un bit 1 mentre una tensione di 0V indichi un bit 0, rimane il problema di decidere &amp;ldquo;quando&amp;rdquo; misurare la tensione per rilevare i bit.
Ad esempio consideriamo il seguente segnale dati.</description></item><item><title>Variabili</title><link>https://profschimd.github.io/materie/inf/3/01-programmazione/02-variabili/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/3/01-programmazione/02-variabili/</guid><description/></item><item><title>Condizioni e salti</title><link>https://profschimd.github.io/materie/inf/3/01-programmazione/03-condizioni-salti/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/3/01-programmazione/03-condizioni-salti/</guid><description>Condizioni: if-then-else Attenzione al codice replicato Le condizioni if sono indispensabili per eseguire codice diverso in base a delle condizioni quale, ad esempio, il valore di una variabile. Perciò si può scrivere a schermo una frase al singolare
È rimasto un solo posto, affrettati a prenotare! in caso in cui, ad esempio su un volo, sia rimasto l&amp;rsquo;ultimo posto disponibile mentre si usano frasi diverse in situazioni diverse.
Un bravo programmatore deve identificare tutte e sole quelle istruzioni che cambiano sulla base della condizione.</description></item><item><title>Protocolli di rete</title><link>https://profschimd.github.io/materie/sr/4/01-base-reti/protocolli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/01-base-reti/protocolli/</guid><description>Definizione: Protocollo Un protocollo di rete è un insieme di regole che determinano il modo in cui avviene una comunicazione tra due software. I protocolli sono usati da software che si posizionano allo stesso livello del modello di riferimento.
La definizione appena data presenta diversi aspetti da capire.
Insieme di regole proprio come nella comunicazione tra persone, è necessario che si stabiliscano delle regole perché questa comunicazione possa avvenire. Le regole si stabiliscono per garantire diversi requisiti due persone devono in una lingua comprensibile ad entrambi; se &amp;ldquo;distanti&amp;rdquo; le due persone devono utilizzare opportuni mezzi; due persone non dovrebbero parlare contemporaneamente; se la conversazione è riservata e remota, bisogna essere sicuri dell&amp;rsquo;identità interlocutore Comunicazione come visto sopra, lo scopo è, solitamente quello di effettuare una comunicazione, vale a dire uno scambio di informazioni.</description></item><item><title>Sezione critica</title><link>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/sezione_critica/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/sezione_critica/</guid><description>Il problema della sezione critica Un sistema multithread può presentare problemi di sincronizzazione dovuti all&amp;rsquo;utilizzo da parte di due o più thread della stessa risorsa. Questa risorsa può essere un file e perfino una variabile (ricordiamo che i thread di un processo lavorano su uno spazio di memoria condiviso, quindi possono usare variabili condivise). Un esempio di questi problemi di sincronizzazione si ha in caso di race condition (come descritto qui).</description></item><item><title>Topologia fisica di una rete</title><link>https://profschimd.github.io/materie/sr/4/02-physical/topology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/02-physical/topology/</guid><description>Il modo in cui i dispositivi di una rete sono collegati tra loro viene detto topologia della rete.</description></item><item><title>Mutex, Semafori e Monitor</title><link>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/mutex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/mutex/</guid><description>Mutex Il concetto di Mutex (Mutual Exclusive) viene usato per indicare una qualche risorsa che può essere utilizzata da un solo thread o processo per volta
Osserva Si dice quindi che l&amp;rsquo;uso da parte un thread esclude l&amp;rsquo;uso da tutti gli altri da cui la dicitura mutua esclusione.
In pratica, un mutex è una variabile bool, quindi che può assumere solo i valor true e false. Quando la variabile è true il mutex è stato acquisito da un qualche thread ed è quindi locked.</description></item><item><title>Deadlock</title><link>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/deadlock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/02-sincronizzazione/deadlock/</guid><description>La sincronizzazione è una tecnica che permette di fissare l&amp;rsquo;ordine di esecuzione di thread. Con la sincronizzazione è possibile, quindi, imporre delle regole del tipo il thread A deve finire prima del thread B oppure il thread C deve partire quando i thread D, E ed F sono terminati. Di conseguenza le tecniche di sincronizzazione sono molto utili e vengono spesso usate nella programmazione concorrente. Tuttavia l&amp;rsquo;utilizzo della sincronizzazione può avere anche effetti negativi, a volte &amp;ldquo;gravi&amp;rdquo;, come quello del deadlock che discutiamo qui sotto.</description></item><item><title>Livello applicativo</title><link>https://profschimd.github.io/materie/sr/5/01-application/livello-applicativo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/5/01-application/livello-applicativo/</guid><description>Il livello applicativo (application layer) è l&amp;rsquo;ultimo (settimo) livello dell&amp;rsquo;architettura ISO/OSI. Il suo ruolo è quello di fornire i servizi necessari alla realizzazione di un&amp;rsquo;applicazione di rete quali posta, World Wide Web, streaming e molte altro.
La quantità di protocolli del livello applicativo è vastissima ed è praticamente impossibile discuterli tutti. Alcuni di questi protocolli, tuttavia, ricoprono un ruolo fondamentale nell&amp;rsquo;utilizzo di Internet ed è quindi importante conoscerne i dettagli. In particolare, sono di fondamentale importanza i seguenti protocolli del livello applicativo.</description></item><item><title>Progetto e Gestione Progetto</title><link>https://profschimd.github.io/materie/gpoi/5/03/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/gpoi/5/03/project/</guid><description>Questa lezione tratta i concetti base del project management (in italiano gestione progetto) approfondendo il concetto di progetto, la differenza tra progetto e processo ed il concetto di gestione del progetto.
Consultando questa mappa concettuale si può vedere come il concetto di progetto sia definito e collegato ad altri concetti fondamentali. Le lezioni di questo modulo (di cui questa è la prima) cercano di spiegare gli aspetti più importanti mostrati nella mappa.</description></item><item><title>Laboratorio: gestire dati con plain-file</title><link>https://profschimd.github.io/materie/inf/5/01-gestione-dati/l01-file-dati/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/inf/5/01-gestione-dati/l01-file-dati/</guid><description/></item><item><title>Laboratorio: livelli di rete e programmazione</title><link>https://profschimd.github.io/materie/sr/4/01-base-reti/lab01-program-livelli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/4/01-base-reti/lab01-program-livelli/</guid><description>Uno dei vantaggi dei vantaggi di un&amp;rsquo;architettura di rete stratificata è la modularità che ne deriva. Infatti, ogni livello può essere realizzato com un modulo a sé, l&amp;rsquo;importante è che si realizzino i corretti Service Access Point (SAP). Per comprendere meglio questo aspetto, in questo laboratorio si procede alla stesura di una piccola architettura di rete basata su due soli livelli. Negli esempi verrà utilizzato il linguaggio Python, ma è possibile, ma qualsiasi linguaggio ad alto livello può essere utilizzato, va tenuto in considerazione, tuttavia, che ogni linguaggio presenta nei modi specifici per realizzare alcuni concetti della programmazione (esempio: interfacce, classi astratte, protocolli, &amp;hellip;).</description></item><item><title>Domain Name System (DNS)</title><link>https://profschimd.github.io/materie/sr/5/01-application/dns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/5/01-application/dns/</guid><description/></item><item><title>Protocollo HTTP</title><link>https://profschimd.github.io/materie/sr/5/01-application/http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/5/01-application/http/</guid><description/></item><item><title>Protocollo FTP</title><link>https://profschimd.github.io/materie/sr/5/01-application/ftp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/5/01-application/ftp/</guid><description/></item><item><title>Posta elettronica (SMTP, POP3, IMAP)</title><link>https://profschimd.github.io/materie/sr/5/01-application/protocolli-posta/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/5/01-application/protocolli-posta/</guid><description/></item><item><title>Altri protocolli di livello applicativo</title><link>https://profschimd.github.io/materie/sr/5/01-application/altri-protocolli-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/5/01-application/altri-protocolli-app/</guid><description>Telnet Dynamic Host Configuration Protocol (DHCP)</description></item><item><title>Laboratorio: Server su macchina virtuale</title><link>https://profschimd.github.io/materie/sr/5/01-application/l01-vm-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/5/01-application/l01-vm-server/</guid><description>In questo laboratorio si installeranno diversi server su macchina virtuale Linux.</description></item><item><title>3IC (AS 2021-2022)</title><link>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/3ic-2021-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/3ic-2021-2022/</guid><description/></item><item><title>4IA</title><link>https://profschimd.github.io/classi/4ia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/4ia/</guid><description>Lezioni 02 - Ripasso Java e OOP (TBA) Github 01 - Presentazione (13/09/22) Presentazione docente Programma (Classroom)</description></item><item><title>4IC</title><link>https://profschimd.github.io/classi/4ic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/4ic/</guid><description>Lezioni 01 - Architettura a strati (13/09/22) Architettura a strati</description></item><item><title>4IC (AS 2021-2022)</title><link>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/4ic-2021-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/4ic-2021-2022/</guid><description/></item><item><title>4ID (AS 2021-2022)</title><link>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/4id-2021-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/4id-2021-2022/</guid><description/></item><item><title>5IA (AS 2021-2022)</title><link>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/5ia-2021-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/5ia-2021-2022/</guid><description/></item><item><title>5IC</title><link>https://profschimd.github.io/classi/5ic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/5ic/</guid><description/></item><item><title>5IC (AS 2021-2022)</title><link>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/5ic-2021-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/anni-passati/classi-as-2021-2022/5ic-2021-2022/</guid><description/></item><item><title>5ID</title><link>https://profschimd.github.io/classi/5id/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/classi/5id/</guid><description/></item><item><title>About</title><link>https://profschimd.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/about/</guid><description>Questo sito contiene materiale didattico predisposto per gli alunni dell&amp;rsquo;ITIS Carlo Zuccante di Venezia-Mestre.
Il materiale prodotto, quindi, va utilizzato esclusivamente a scopi didattici e non rappresenta documentazione o guida ufficiale ad i tool, linguaggi ed in generale agli argomenti trattati.
Alcuni link utili:
GitHub ProfSchimd Vecchio sito materiale Registro Elettronico Sito Ufficiale ITIS Carlo Zuccante Sito Orientamento ITIS Zuccante</description></item><item><title>Load and Store</title><link>https://profschimd.github.io/materie/sr/3/02/load-store/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/sr/3/02/load-store/</guid><description>Leggere e scrivere la RAM Un programma non potrebbe fare molto senza utilizzare la memoria RAM per tanti motivi:
le istruzioni sono nella RAM; i dati sono nella RAM; i risultati vengono scritti nella RAM; &amp;hellip; Serve quindi un modo per poter leggere e scrivere dalla RAM. Le istruzioni assembly che fanno queste operazioni sono
LOAD (LD) legge dati dalla RAM e li scrivi nei registri STORE (ST) scrive dati nella RAM prendendoli dai registri Architetture Load-Store Alcune architetture di processori vengono dette Load-Store perché non permettono solo questo tipo di operazioni con la RAM.</description></item><item><title>Processi e Thread</title><link>https://profschimd.github.io/materie/tpsit/4/01-processi-thread/processi-e-thread/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/tpsit/4/01-processi-thread/processi-e-thread/</guid><description>Processi e thread</description></item><item><title>Python quiz</title><link>https://profschimd.github.io/materie/python/02-primi-passi/quiz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://profschimd.github.io/materie/python/02-primi-passi/quiz/</guid><description/></item></channel></rss>